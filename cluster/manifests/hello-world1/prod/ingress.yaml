apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hello-world1
  annotations:
    alb.ingress.kubernetes.io/scheme: "internet-facing"
    alb.ingress.kubernetes.io/healthcheck-path: "/"
    alb.ingress.kubernetes.io/backend-protocol: "HTTP"
    #alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
    #alb.ingress.kubernetes.io/group.name: "hello-world"
    #alb.ingress.kubernetes.io/tags: "Env=prod,App=hello-world1,Created=Alex Egorov"
    #alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:640556732210:certificate/29522549-6c56-4538-a41c-f3f8b1955c68
    # These attributers are documented in the below places (This example uses an application load balancer)
    # ALB: https://docs.aws.amazon.com/elasticloadbalancing/latest/application/application-load-balancers.html#load-balancer-attributes
    # NLB: https://docs.aws.amazon.com/elasticloadbalancing/latest/network/network-load-balancers.html#load-balancer-attributes
    ##alb.ingress.kubernetes.io/load-balancer-attributes: access_logs.s3.prefix=app,routing.http2.enabled=true,access_logs.s3.enabled=true,access_logs.s3.bucket=${ALB_ACCESS_LOGS_BUCKET_NAME},idle_timeout.timeout_seconds=600
    ##alb.ingress.kubernetes.io/target-group-attributes: load_balancing.algorithm.type=least_outstanding_requests
spec:
  ingressClassName: alb
  rules:
    - host: kublr.egorov.net
      http:
        paths:
          - path: /hello1
            backend:
              service:
                name: hello-world1
                port:
                  number: 80
            pathType: Prefix